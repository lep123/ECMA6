* {
  padding: 0;
  margin: 0;
}

.box{
  width: 100%;
  height: 100%;
}

/* transition */

/* css的transition允许css的属性值在一定的时间区间内平滑地过渡。
这种效果可以在鼠标单击、获得焦点、被点击或对元素任何改变中触发，
并圆滑地以动画效果改变CSS的属性值。 */

/* transition主要包含四个属性值：
执行变换的属性：transition-property,
变换延续的时间：transition-duration,
在延续时间段，变换的速率变化transition-timing-function,
变换延迟时间transition-delay。下面分别来看这四个属性值 */



/* 一、transition-property: */

/* transition-property是用来指定当元素其中一个属性改变时执行transition效果，
其主要有以下几个值：none(没有属性改变)；
all（所有属性改变）这个也是其默认值；indent（元素属性名）。
当其值为none时，transition马上停止执行，
当指定为all时，则元素产生任何属性值变化时都将执行transition效果，
ident是可以指定元素的某一个属性值。其对应的类型如下： */

/* 二、transition-duration: */
/* ansition-duration是用来指定元素 
转换过程的持续时间，取值：<time>为数值，单位为s（秒）或者ms(毫秒),可以作用于所有元素，
包括:before和:after伪元素。其默认值是0，也就是变换时是即时的。 */

/* 三、transition-timing-function: */

/* 取值：
transition-timing-function的值允许你根据时间的推进去改变属性值的变换速率，transition-timing-function有6个可能值：
1、ease：（逐渐变慢）默认值，ease函数等同于贝塞尔曲线(0.25, 0.1, 0.25, 1.0).
2、linear：（匀速），linear 函数等同于贝塞尔曲线(0.0, 0.0, 1.0, 1.0).
3、ease-in：(加速)，ease-in 函数等同于贝塞尔曲线(0.42, 0, 1.0, 1.0).
4、ease-out：（减速），ease-out 函数等同于贝塞尔曲线(0, 0, 0.58, 1.0).
5、ease-in-out：（加速然后减速），ease-in-out 函数等同于贝塞尔曲线(0.42, 0, 0.58, 1.0)
6、cubic-bezier：（该值允许你去自定义一个时间曲线）， 特定的cubic-bezier曲线。 (x1, y1, x2, y2)四个值特定于曲线上点P1和点P2。所有值需在[0, 1]区域内，否则无效。
其是cubic-bezier为通过贝赛尔曲线来计算“转换”过程中的属性值，如下曲线所示，通过改变P1(x1, y1)和P2(x2, y2)的坐标可以改变整个过程的Output Percentage。初始默认值为default.
*/

/* 四、transition-delay: */
/* transition-delay是用来指定一个动画开始执行的时间，
也就是说当改变元素属性值后多长时间开始执行transition效果，
其取值：<time>为数值，单位为s（秒）或者ms(毫秒)，其使用和transition-duration极其相似，
也可以作用于所有元素，包括:before和:after伪元素。 默认大小是"0"，也就是变换立即执行，没有延迟。
 */

 /* transition一个速记法：transition: <property> <duration> <animation type> <delay> */
.box1{
  margin: 50px;
  width:100px;
  height: 100px;
  background: red;
  transition: all 5s ease-in 3s;
  
}
.box1:hover {width:300px;background:green;transform: skew(30deg);}


#timings-demo 
{ 
  border: 1px solid #ccc; 
  padding: 10px; 
  height: 400px; 
  width: 400px; 
} 
.demo-box { width: 100px; 
  height: 50px; 
  text-align: center; 
  line-height: 50px;
  text-align: center; 
  color: #fff; 
  background: #96c; 
  -moz-border-radius: 5px; 
  -webkit-border-radius: 5px;
  border-radius: 5px; 
  -moz-box-shadow: inset 0 0 5px rgba(102, 153, 0,0.5);
  -webkit-box-shadow: inset 0 0 5px rgba(102, 153, 0,0.5); 
  box-shadow: inset 0 0 5px rgba(102, 153, 0,0.5); margin-bottom: 10px;
} 

#ease { 
  -moz-transition: all 5s ease 0.3s; 
  -webkit-transition: all 5s ease 0.3s; 
  -o-transition: all 5s ease 0.3s; 
  transition: all 5s ease 0.3s; background: #f36;
} 
 #ease-in { 
   -moz-transition: all 3s ease-in 0.5s; 
  -webkit-transition: all 3s ease-in 0.5s; 
  -o-transition: all 3s ease-in 0.5s; transition: all 3s ease-in 0.5s; 
  background: #369; 
} 
 #ease-out { 
   -moz-transition: all 5s ease-out 0s; 
  -webkit-transition: all 5s ease-out 0s;
  -o-transition: all 5s ease-out 0s;
  transition: all 5s ease-out 0s;
  background: #636; 
} 
 #ease-in-out { 
   -moz-transition: all 1s ease-in-out 2s; 
  -webkit-transition: all 1s ease-in-out 2s; 
  -o-transition: all 1s ease-in-out 2s; 
  transition: all 1s ease-in-out 2s; 
  background: #3e6; 
} 
 #linear { 
   -moz-transition: all 6s linear 0s; 
  -webkit-transition: all 6s linear 0s; 
  -o-transition: all 6s linear 0s; transition: all 6s linear 0s; 
  background: #999; 
} 
 #cubic-bezier { 
   -moz-transition: all 4s cubic-bezier 1s; 
  -webkit-transition: all 4s cubic-bezier 1s; 
  -o-transition: all 4s cubic-bezier 1s; transition: all 4s cubic-bezier 1s; 
  background: #6d6; 
} 
#timings-demo.timings-demo-hover .demo-box, #timings-demo:hover .demo-box { 
  -moz-transform: rotate(360deg) scale(1.2);
  -webkit-transform: rotate(360deg) scale(1.2); 
  -o-transform: rotate(360deg) scale(1.2); 
  transform: rotate(360deg) scale(1.2); 
  background: #369; border: 1px solid rgba(255,230,255,08); 
  -moz-border-radius: 25px; -webkit-border-radius: 25px; border-radius: 25px; 
  margin-left: 280px; 
  height: 30px; line-height: 30px; margin-bottom: 15px; 
}




